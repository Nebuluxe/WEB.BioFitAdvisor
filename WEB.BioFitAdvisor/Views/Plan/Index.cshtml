@using System.Text.Json
@using API.BioFitAdvisor.Domain
@model IEnumerable<Plan>

@{
    ViewData["Title"] = "Planes";
    var plansJson = JsonSerializer.Serialize(Model.Select(plan => new
    {
        planId = plan.PlanId,
        name = plan.Name,
        description = plan.Description,
        numberOfWeeks = plan.NumberOfWeeks
    }));
}

<div class="header-view">
    <h4>@ViewData["Title"]</h4>
    <div class="header-buttons">
        <a class="btn btn-success btn-sm me-1" href="/Plan/CreateOrEdit">Crear</a>
        <button id="toggleViewButton" class="btn btn-primary btn-sm">Cambiar a Vista de Tarjetas</button>
    </div>
</div>

<!-- Contenedor para la vista de tabla (AG-Grid) -->
<div class="container-section">
    <div id="tableView" class="ag-theme-alpine-dark" style="height: 600px; width: 100%;"></div>
</div>

<!-- Contenedor para la vista de tarjetas -->
<div class="container-section" id="cardView" style="display: none;">
    <div class="row"></div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Datos generados desde Razor
            var rowData = @Html.Raw(plansJson);

            // Definir las columnas
            var columnDefs = [
                { headerName: 'Nombre', field: 'name', sortable: true, filter: true, checkboxSelection: true },
                { headerName: 'Descripción', field: 'description', sortable: true, filter: true },
                { headerName: 'Número de Semanas', field: 'numberOfWeeks', sortable: true, filter: true },
                {
                    headerName: 'Acciones', field: 'planId', cellRenderer: function (params) {
                        return `
                                            <a href="/Plan/Details/${params.value}" class="btn btn-info me-1">Detalles</a>
                                            <a href="/Plan/CreateOrEdit/${params.value}" class="btn btn-warning me-1">Editar</a>
                                            <a href="/Plan/Delete/${params.value}" class="btn btn-danger">Eliminar</a>
                                        `;
                    }
                }
            ];

            // Inicializar AG-Grid con las configuraciones globales
            var gridOptions = getDefaultGridOptions(rowData, columnDefs);

            var gridDiv = document.querySelector('#tableView');
            new agGrid.Grid(gridDiv, gridOptions);

            // Alternar entre la vista de tabla y la vista de tarjetas
            document.getElementById('toggleViewButton').addEventListener('click', function () {
                var tableView = document.getElementById('tableView');
                var cardView = document.getElementById('cardView');
                if (tableView.style.display === 'none') {
                    // Mostrar la vista de tabla
                    tableView.style.display = 'block';
                    cardView.style.display = 'none';
                    this.textContent = 'Cambiar a Vista de Tarjetas';
                } else {
                    // Mostrar la vista de tarjetas
                    tableView.style.display = 'none';
                    cardView.style.display = 'block';
                    this.textContent = 'Cambiar a Vista de Tabla';
                    renderCardView(rowData);
                }
            });

            // Renderizar la vista de tarjetas
            function renderCardView(data) {
                var cardView = document.querySelector('#cardView .row');
                cardView.innerHTML = '';  // Limpiar las tarjetas anteriores

                data.forEach(function (row) {
                    var card = document.createElement('div');
                    card.className = 'col-md-4 mb-3';
                    card.innerHTML = `
                                        <div class="card">
                                            <div class="card-body">
                                                <h5 class="card-title">${row.name}</h5>
                                                <p class="card-text"><strong>Descripción:</strong> ${row.description}</p>
                                                <p class="card-text"><strong>Número de Semanas:</strong> ${row.numberOfWeeks}</p>
                                                <a href="/Plan/Details/${row.planId}" class="btn btn-info me-1">Detalles</a>
                                                <a href="/Plan/CreateOrEdit/${row.planId}" class="btn btn-warning me-1">Editar</a>
                                                <a href="/Plan/Delete/${row.planId}" class="btn btn-danger">Eliminar</a>
                                            </div>
                                        </div>
                                    `;
                    cardView.appendChild(card);
                });
            }

            // Buscador global
            document.getElementById('quickSearch').addEventListener('input', function () {
                gridOptions.api.setQuickFilter(this.value);
            });

            // Exportar a CSV
            document.getElementById('exportButton').addEventListener('click', function () {
                gridOptions.api.exportDataAsCsv();
            });
        });
    </script>
}
